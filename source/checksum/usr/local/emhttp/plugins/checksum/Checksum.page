Menu="ChecksumSuite"
Title="Checksum Tools"
Icon="checksum.png"
---
<?

#################################################
##                                             ##
##  Checksum.  Copyright 2015, Andrew Zawadzki ##
##                                             ##
#################################################


$plugin = "checksum";
$checksumPaths['usbSettings']       = "/boot/config/plugins/$plugin/settings.json";
$checksumPaths['tmpSettings']       = "/tmp/checksum/temp.json";
$checksumPaths['Settings']          = "/var/local/emhttp/plugins/$plugin/settings.json";
$checksumPaths['Waiting']           = "/tmp/checksum/waiting";
$checksumPaths['Parity']            = "/tmp/checksum/parity";
$checksumPaths['Running']           = "/tmp/checksum/running";
$checksumPaths['Log']               = "/tmp/checksum/log.txt";

$unRaidPaths['Variables']           = "/var/local/emhttp/var.ini";

$scriptPaths['CreateWatch']         = "/usr/local/emhttp/plugins/$plugin/scripts/checksumInotify.sh";
$scriptPaths['b2sum']               = "/usr/local/emhttp/plugins/$plugin/include/b2sum";
$scriptPaths['MonitorWatch']        = "/usr/local/emhttp/plugins/$plugin/scripts/checksumInotify1.sh";
$scriptPaths['inotifywait']         = "/usr/bin/inotifywait";
$scriptPaths['checksuminotifywait'] = "/tmp/checksum/checksum_inotifywait";

$unRaidVariables = parse_ini_file("/var/local/emhttp/var.ini");
$unRaidStarted = $unRaidVariables['mdState'] == "STARTED" ? "true" : "false";


?>
<script>
var URL = "/plugins/<?=$plugin?>/include/exec.php";

$(function(){

if ( <?=$unRaidStarted?> == false )
{
    swal({
      title: "unRaid array not started",
      text: "The array must be started to make changes to this plugin",
      html: true,
      showConfirmButton: true,
      type: "error"
    });
    return;

}


$.post(URL,{action:'inotifywait'},function(data) {
  if (data)
 {
    $("#restart").prop("disabled",true);
    swal({
      title: "inotify tools not installed!",
      text: "This plugin requires the nerd pack plugin to be installed.\nSee here:\n<a href='https://lime-technology.com/forum/index.php?topic=37541.0' target='_blank'>Nerd Pack Plugin</a>",
      html: true,
      type: "error"
    });
  }
});


setInterval(function() { statusDisplay(); },1500);
setInterval(function() { showLogLine(); }, 5000);
statusDisplay();
showLogLine();

$.post(URL,{action:'show_global'},function(data) {
  if (data) {
    $("#settings").html(data);
  }
});


});

function showLogLine()
{
  $.post(URL,{action:'logline'},function(data) {
    if (data) {
      $("#logged").html(data);
    }
  });
}


function statusDisplay()
{
  $.post(URL,{action:'status'},function(data) {
    if (data) {
      $("#status").html(data);
    }
  });
}


function enableApply(index)
{
  if ( $("#apply"+index).prop("disabled") )
  {
    $("#apply"+index).prop("disabled",false);
    $("#run"+index).prop("disabled",true);
  }
}

function disableApply(index)
{
  $("#apply"+index).prop("disabled",true);
  $("#run"+index).prop("disabled",true);
}

function shareChanged(index)
{
  var selected = $("#share"+index).val();
  $("#restartNeeded").html("<font color='red'>Restart of monitor required for changes to take effect </font>");
  disableApply(index);
  if ( selected == "***" )
  {
    $("#custom"+index).prop("disabled",false);
    validatePath(index);
  } else {
    $("#custom"+index).prop("disabled",true);
    $("#patherror"+index).html(" ");
    enableApply(index);
  }
}

function includeChanged(index)
{
  var selected = $("#includeall"+index).val();

  if ( selected == "no" )
  {
    $("#included"+index).prop("disabled",false);
    $("#excluded"+index).prop("disabled",false);
  } else {
    $("#included"+index).prop("disabled",true);
    $("#excluded"+index).prop("disabled",true);
  }
  enableApply(index);
  validateInclude(index);
}

function validatePath(index)
{
  var path = $("#custom"+index).val();
  var share = $("#share"+index).val();
  
  switch (share) {
    case 'undefined':
      $("#apply"+index).prop("disabled",false);
      $("#run"+index).prop("disabled",trued);
      break;
    case '***':
      $.post(URL,{action:'validate_path',index:index,path:path},function(data) {
        if (data) {
          $("#patherror"+index).html(data);
          if ( data.indexOf("red") == -1 )
          {
            $("#apply"+index).prop("disabled",false);
            $("#run"+index).prop("disabled",true);
          } else {
            $("#apply"+index).prop("disabled",true);
            $("#run"+index).prop("disabled",false);
          }
        }
      });
      break;
  }
}
  
function apply(index)
{
  var share = $("#share"+index).val();
  var custom = $("#custom"+index).val();
  var algorithm = $("#algorithm"+index).val();
  var changed = $("#update"+index).val();
  var separate = $("#separate"+index).val();
  var monitor = $("#monitor"+index).val();
  var extension = $("#extension"+index).val();

  if ( extension != ".hash" ) { extension = algorithm; }

  var includeall = $("#includeall"+index).val();
  var included = $("#included"+index).val();
  var excluded = $("#excluded"+index).val();

  var parity = $("#parity").val();
  var pause = $("#pause").val();

  $.post(URL,{action:'apply',index:index,share:share,custom:custom,changed:changed,algorithm:algorithm,separate:separate,extension:extension,includeall:includeall,included:included,excluded:excluded,monitor:monitor}, function(data) {
     if (data) {
     }
  });
  disableApply(index);
  $("#run"+index).prop("disabled",false);
}
  
function deleteMonitor(index)
{
  swal({
    title: "Are you sure you want to stop monitoring this share?",
    type: "warning",
    showCancelButton: true,
    closeOnCancel: true,
    closeOnConfirm: false
  },function(isConfirm)
  {
    if ( isConfirm )
    {
      $.post(URL,{action:'delete',index:index}, function(data)
      {
        if (data)
        {
          $("#settings").html(data);
          swal({
            title: "Settings Updated",
            text: "You will need to restart the background process to complete the process",
            timer: 20000,
            showConfirmButton: true
          });
        }
      });
    }


  }
  );
}

function addMonitor()
{
  $.post(URL,{action:'add'},function(data)
  {
    if (data)
    {
      $("#settings").html(data);
      $("#restartNeeded").html("<font color='red'>Restart of monitor required for changes to take effect </font>");
    }
  });
}

function changeMonitor(index)
{
  $("#apply"+index).prop("disabled",false);
  $("#restartNeeded").html("<font color='red'>Restart of monitor required for changes to take effect </font>");
}

function restartMonitor()
{
  swal({
    imageUrl: "/plugins/checksum/images/spinner2.gif",
    imageSize: "20x20",
    title: "Starting Background Process",
    text: "This will take about 15 seconds",
    showConfirmButton: false
  });

  $.post(URL,{action:'start_monitor'},function(data)
  {
    if (data)
    {
      $("#restart").prop("disabled",false);
      $("#restartNeeded").html(" ");
  swal({
    title: "",
    text: "You need to wait until the log shows <em><b>Watches Established</b></em> prior to queueing any jobs.<br><br>Depending upon your file structure, that may take a minute or so",
    html: true,
    type: "warning",
    showConfirmButton: true
  });

    }
  });
}

function stopMonitor()
{
  swal({
    imageUrl: "/plugins/checksum/images/spinner2.gif",
    imageSize: "20x20",
    title: "Stopping Background Process",
    text: "This will take about 15 seconds",
    showConfirmButton: false
  });

  $.post(URL,{action:'stop_monitor'},function(data)
  {
    if (data)
    {
  swal({
    title: "",
    text: "Any scans queued up have probably been lost",
    html: true,
    type: "warning",
    showConfirmButton: true
  });

    }
  });
}


function runNow(index)
{
  var share = $("#share"+index).html();  
  var custom = $("#custom"+index).val();

  $("#run"+index).prop("disabled",true);

  $.post(URL,{action:'run_now',share:share,custom:custom},function(data)
  {
    if (data)
    {
      swal({
        title: "",
        text: "Added "+share+" to queue",
        type: "success"
      });
      $("#run"+index).prop("disabled",false);
    }
  });
}

function changeGlobal()
{
  $("#globalApply").prop("disabled",false);
}

function globalApply()
{
  var parity = $("#parity").val();
  var pause = $("#pause").val();
  var ignorehour = $("#ignoreHour").val();
  var numwatches = $('#numwatches').val();
  var numqueue = $('#numqueue').val();
  var notify = $('#notify').val();
  var success = $('#success').val();
  var logsave = $('#logsave').val();

  $.post(URL,{action:'change_global',parity:parity,pause:pause,ignorehour:ignorehour,numwatches:numwatches,numqueue:numqueue,notify:notify,success:success,logsave:logsave});
  $("#globalApply").prop("disabled",true);
}

function validateInclude(index)
{
  if ( ! $("#included"+index).prop("disabled") )
  {
    var allCharacters = $("#included"+index).val();
    allCharacters = allCharacters.concat($("#excluded"+index).val());
    allCharacters = allCharacters.trim();
    var length = allCharacters.length;

    if ( length == 0 )
    {
      $("#includeerror"+index).html("<font color='red'>You must include at least 1 term</font>");
      $("#apply"+index).prop("disabled",true);
    } else {
      $("#includeerror"+index).html(" ");
      $("#apply"+index).prop("disabled",false);
    }
  } else {
  $("#includeerror"+index).html(" ");
  }
}

function verifyDisk()
{
  var share = $("#disk2check").val();
  var percent = $("#diskpercent").val();
  var lastPercent = $("#disklastpercent").val();

  $("#diskVerifyButton").prop("disabled",true);

  $.post(URL,{action:'verify_now',share:share,percent:percent,lastPercent:lastPercent}, function(data)
  {
    if (data)
    {
      swal({
        title: "",
        text: "Now verifying disk #"+share,
        type: "success"
      });
      $("#diskVerifyButton").prop("disabled",false);
    }
  });
}

function verifyNow(index)
{
  var share = $("#share"+index).html();
  var percent = $("#percent"+index).val();
  var lastPercent = $("#last"+index).val();

  if ( share == "/mnt/user/***" )
  {
    share = $("#custom"+index).val();
  }

  $("#verify"+index).prop("disabled",true);

  $.post(URL,{action:'verify_now',share:share,percent:percent,lastPercent:lastPercent}, function(data)
  {
    if (data)
    {
      swal({
        title: "",
        text: "Now verifying "+share,
        type: "success"
      });

      $("#verify"+index).prop("disabled",false);
    }
  });

}


function logButton(whichLog)
{
  openWindow('/plugins/checksum/scripts/showlog.sh&arg1='+whichLog,'Checksum Log',900,1500);
}

function validateWatches()
{
  $('#globalApply').prop('disabled',false);
  $("#restartNeeded").html("<font color='red'>Restart of monitor required for changes to take effect </font>");
}

function changeView(button)
{
  switch (button)
  {
    case "GlobalButton":
      $("#GlobalButton").prop("disabled",true);
      $("#CreateButton").prop("disabled",false);
      $("#ManualButton").prop("disabled",false);
      $("#ScheduleButton").prop("disabled",false);
      $("#VerifyButton").prop("disabled",false);
      $("#DiskButton").prop("disabled",false);

      $.post(URL,{action:'show_global'}, function(data)
      {
        if (data)
        {
          $("#settings").html(data);
        }
      });

      break;
    case "CreateButton":
      $("#GlobalButton").prop("disabled",false);
      $("#CreateButton").prop("disabled",true);
      $("#ManualButton").prop("disabled",false);
      $("#ScheduleButton").prop("disabled",false);
      $("#VerifyButton").prop("disabled",false);
      $("#DiskButton").prop("disabled",false);

      $.post(URL,{action:'show_create'},function(data)
      {
        if (data)
        {
          $("#settings").html(data);
        }
      });

      break;
    case "ManualButton":
      $("#GlobalButton").prop("disabled",false);
      $("#CreateButton").prop("disabled",false);
      $("#ManualButton").prop("disabled",true);
      $("#ScheduleButton").prop("disabled",false);
      $("#VerifyButton").prop("disabled",false);
      $("#DiskButton").prop("disabled",false);

      $.post(URL,{action:'show_manual'},function(data)
      {
        if (data)
        {
          $("#settings").html(data);
        }
      });

      break;

    case "ScheduleButton":
      $("#GlobalButton").prop("disabled",false);
      $("#CreateButton").prop("disabled",false);
      $("#ManualButton").prop("disabled",false);
      $("#ScheduleButton").prop("disabled",true);
      $("#VerifyButton").prop("disabled",false);
      $("#DiskButton").prop("disabled",false);

      $.post(URL,{action:'show_schedule'}, function(data)
      {
        if (data)
        {
          $("#settings").html(data);
        }
      });
      break;

    case "VerifyButton":
      $("#GlobalButton").prop("disabled",false);
      $("#CreateButton").prop("disabled",false);
      $("#ManualButton").prop("disabled",false);
      $("#ScheduleButton").prop("disabled",false);
      $("#VerifyButton").prop("disabled",true);
      $("#DiskButton").prop("disabled",false);

      $.post(URL,{action:'show_verify_schedule',tag:'Verify'},function(data)
      {
        if (data)
        {
          $("#settings").html(data);
        }
      });
      break;
    case "DiskButton":
      $("#GlobalButton").prop("disabled",false);
      $("#CreateButton").prop("disabled",false);
      $("#ManualButton").prop("disabled",false);
      $("#ScheduleButton").prop("disabled",false);
      $("#VerifyButton").prop("disabled",false);
      $("#DiskButton").prop("disabled",true);

      $.post(URL,{action:'show_verify_schedule',tag:'Disk'},function(data)
      {
        if (data)
        {
          $("#settings").html(data);
        }
      });
      break;

  }
}

function changeFrequency(share,index,initialize)
{
  var frequency = $("#frequency"+share+index).val();
  
  switch (frequency)
  {
    case "never":
      $("#weekday"+share+index).prop("disabled",true);
      $("#monthday"+share+index).prop("disabled",true);
      $("#month"+share+index).prop("disabled",true);
      $("#hour"+share+index).prop("disabled",true);
      $("#minute"+share+index).prop("disabled",true);
      $("#custom"+share+index).prop("disabled",true);
      break;

    case "daily":
      $("#weekday"+share+index).prop("disabled",true);
      $("#monthday"+share+index).prop("disabled",true);
      $("#month"+share+index).prop("disabled",true);
      $("#hour"+share+index).prop("disabled",false);
      $("#minute"+share+index).prop("disabled",false);
      $("#custom"+share+index).prop("disabled",true);
      break;

    case "weekly":
      $("#weekday"+share+index).prop("disabled",false);
      $("#monthday"+share+index).prop("disabled",true);
      $("#month"+share+index).prop("disabled",true);
      $("#hour"+share+index).prop("disabled",false);
      $("#minute"+share+index).prop("disabled",false);
      $("#custom"+share+index).prop("disabled",true);
      break;

    case "monthly":
      $("#weekday"+share+index).prop("disabled",true);
      $("#monthday"+share+index).prop("disabled",false);
      $("#month"+share+index).prop("disabled",true);
      $("#hour"+share+index).prop("disabled",false);
      $("#minute"+share+index).prop("disabled",false);
      $("#custom"+share+index).prop("disabled",true);
      break;

    case "yearly":
      $("#weekday"+share+index).prop("disabled",true);
      $("#monthday"+share+index).prop("disabled",false);
      $("#month"+share+index).prop("disabled",false);
      $("#hour"+share+index).prop("disabled",false);
      $("#minute"+share+index).prop("disabled",false);
      $("#custom"+share+index).prop("disabled",true);
      break;
   
    case "custom":
      $("#weekday"+share+index).prop("disabled",true);
      $("#monthday"+share+index).prop("disabled",true);
      $("#month"+share+index).prop("disabled",true);
      $("#hour"+share+index).prop("disabled",true);
      $("#minute"+share+index).prop("disabled",true);
      $("#custom"+share+index).prop("disabled",false);
      break;
  }
  generateCron(share,index);
  if ( ! initialize )
  {
    $("#apply"+share+index).prop("disabled",false);
  }
}

function applyFrequency(share,index)
{
  var frequency = $("#frequency"+share+index).val();
  var weekday = $("#weekday"+share+index).val();
  var monthday = $("#monthday"+share+index).val();
  var month = $("#month"+share+index).val();
  var hour = $("#hour"+share+index).val();
  var minute = $("#minute"+share+index).val();
  var custom = $("#custom"+share+index).val();
  var path = $("#path"+share+index).html();
  var cron = $("#cron"+share+index).html();
  var percent = $("#percent"+share+index).val();

  $.post(URL,{action:'apply_schedule',frequency:frequency,weekday:weekday,monthday:monthday,month:month,hour:hour,minute:minute,custom:custom,path:path,cron:cron,percent:percent,share:share}, function(data)
  {
    if (data)
    {
      swal({
        title: "",
        text: "Schedule Updated for "+path,
        type: "success"
      });
      $("#apply"+share+index).prop("disabled",true);
    }
  });
}

function scheduleApply(share,index)
{
  $("#apply"+share+index).prop("disabled",false);
  generateCron(share,index);  
}

function generateCron(share,index)
{
  var frequency = $("#frequency"+share+index).val();
  var weekday = $("#weekday"+share+index).val();
  var monthday = $("#monthday"+share+index).val();
  var month = $("#month"+share+index).val();
  var hour = $("#hour"+share+index).val();
  var minute = $("#minute"+share+index).val();

  switch (frequency)
  {
    case "never":
      var cronEntry = "";
      break;
    case "daily":
      var cronEntry = minute + " " + hour + " * * *";
      break;
    case "weekly":
      var cronEntry = minute + " " + hour + " * * " + weekday;
      break;
    case "monthly":
      var cronEntry = minute + " " + hour + " " + monthday + " * *";
      break;
    case "yearly":
      var cronEntry = minute + " " + hour + " " + monthday + " " + month + " *";
    break;
  }

  $("#cron"+share+index).html(cronEntry);
}



</script>
<input type='button' value='Stop Monitor' id='stop' onclick='stopMonitor();'></input><input type='button' id='restart' value='Start Monitor' onclick='restartMonitor();'></input><span id='restartNeeded'></span><font size='2'><b>Monitor Status: <span id='status'></span></b></font>
<span style='float:right'><input type='button' id='failureLog' value='Failure Log' onclick='logButton("failurelog.txt");' disabled)</input>
<input id='checksumLog' type='button' value='Creator Log' onclick='logButton("checksumLog.txt");'></input>
<input id='verifyLog' type='button' value='Verify Log' onclick='logButton("verifylog.txt");'></input>
<input id='commandLog' type='button' value='CommandLog' onclick='logButton("log.txt");'></input></span><br>
<font size='0' face='Courier New'><span id='logged'></span></font><br>
<center><input type='button' id='GlobalButton' value='Global Settings' onclick='changeView(this.id);' disabled></input>
<input type='button' id='CreateButton' value='Creation / Monitor Settings' onclick='changeView(this.id);'></input>
<input type='button' id='ManualButton' value='Add Manual Job' onclick='changeView(this.id);'></input>
<input type='button' id='ScheduleButton' value='Share Creation Schedule' onclick='changeView(this.id);'></input>
<input type='button' id='VerifyButton' value='Share Verification Schedule' onclick='changeView(this.id);'></input>
<input type='button' id='DiskButton' value='Disk Verification Schedule' onclick='changeView(this.id);'></input>

<span id="settings"></span>

<span id="FuckUps"></span>
<span id="debug"></span>
